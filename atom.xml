<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[The Dev Files]]></title>
  <link href="http://www.thedevfiles.com/atom.xml" rel="self"/>
  <link href="http://www.thedevfiles.com/"/>
  <updated>2014-09-03T08:23:43-07:00</updated>
  <id>http://www.thedevfiles.com/</id>
  <author>
    <name><![CDATA[Jonathan Bernardi]]></name>
    <email><![CDATA[jon@jonbernardi.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building a simple contact form in PHP - Part 3]]></title>
    <link href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-3/"/>
    <updated>2014-09-03T00:00:00-07:00</updated>
    <id>http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-3</id>
    
      <summary><![CDATA[Adding client-side form validation to a php contact form.]]></summary>
    
    
      <content type="html"><![CDATA[<p>As we last left it in <a href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-2">part 2</a> of <a href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-1">Building a simple contact form in PHP</a> we added server-side form validation to our contact form and input filtering to the submitted data before sending out the email.</p>

<p>In this part we are going to add some client-side validation to our contact form.</p>

]]></content>
    

  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a simple contact form in PHP - Part 2]]></title>
    <link href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-2/"/>
    <updated>2014-09-02T00:00:00-07:00</updated>
    <id>http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-2</id>
    
      <summary><![CDATA[Adding server-side form validation to a php contact form.]]></summary>
    
    
      <content type="html"><![CDATA[<p>In <a href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-1">part 1</a> of <a href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-1">Building a simple contact form in PHP</a> we built a simple contact form that sends a notification when the form is posted with the values the user posted.</p>

<p>As we discussed at the end of <a href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-1">part 1</a> there are a few problems with our contact form.</p>

<p>We are going to work on solving some of those problems.</p>

]]></content>
    

  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building a simple contact form in PHP - Part 1]]></title>
    <link href="http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-1/"/>
    <updated>2014-09-01T00:00:00-07:00</updated>
    <id>http://www.thedevfiles.com/2014/09/building-a-simple-contact-form-in-php-part-1</id>
    
      <summary><![CDATA[Building a simple contact form in PHP]]></summary>
    
    
      <content type="html"><![CDATA[<p>In this series we will be building a simple contact form in php.</p>

<p>It will cover sending emails and form validation.</p>

]]></content>
    

  </entry>
  
  <entry>
    <title type="html"><![CDATA[Secure Password Hashing with PHP]]></title>
    <link href="http://www.thedevfiles.com/2014/08/secure-password-hashing/"/>
    <updated>2014-08-22T00:00:00-07:00</updated>
    <id>http://www.thedevfiles.com/2014/08/secure-password-hashing</id>
    
      <summary><![CDATA[The password_hash function added in PHP 5.5 makes secure password hashing easy.]]></summary>
    
    
      <content type="html"><![CDATA[<p>There is a lot of misinformation and uncertainty on the topic of password storage.</p>

<p>There are massive amounts of tutorials and articles recommending all manor of methods of storing passwords.
A large number of these are old and using methods that just are up to snuff for todays security standards.</p>

]]></content>
    

  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simplifying database interactions with Doctrine DBAL]]></title>
    <link href="http://www.thedevfiles.com/2014/08/simplifying-database-interactions-with-doctrine-dbal/"/>
    <updated>2014-08-15T00:00:00-07:00</updated>
    <id>http://www.thedevfiles.com/2014/08/simplifying-database-interactions-with-doctrine-dbal</id>
    
      <summary><![CDATA[This article will introduce Doctrine DBAL for a more user friendly developer experience than straight PDO.]]></summary>
    
    
      <content type="html"><![CDATA[<p>I previously wrote about <a href="http://www.thedevfiles.com/2014/08/moving-from-mysql-query-to-pdo">switching from the mysql extension to PDO</a>.
PDO introduces a number of convenient features beyond the mysql extension such as transactions, prepared statements, and more fetching options.
However there are still a few things that are a bit painful.</p>

<p>This article will introduce <a href="http://www.doctrine-project.org/projects/dbal.html">Doctrine DBAL</a> to help alleviate some of these pain points.</p>

<p><abbr title="Doctrine database abstraction &amp; access layer">Doctrine DBAL</abbr> is a wrapper around <a href="http://php.net/manual/en/book.pdo.php">PDO</a>.
It adds a few conveniences beyond straight PDO as well as a query builder.</p>

]]></content>
    

  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving from mysql_query to PDO]]></title>
    <link href="http://www.thedevfiles.com/2014/08/moving-from-mysql-query-to-pdo/"/>
    <updated>2014-08-08T00:00:00-07:00</updated>
    <id>http://www.thedevfiles.com/2014/08/moving-from-mysql-query-to-pdo</id>
    
      <summary><![CDATA[The php mysql extension has been marked as deprecated. This article will introduce PDO as a replacement.]]></summary>
    
    
      <content type="html"><![CDATA[<p>The mysql extension has been marked as deprecated as of php 5.5.0 and will be removed completely in a future version.</p>

<p>It is old and not very user friendly.</p>

<p>This article will introduce PDO as a replacement.</p>

]]></content>
    

  </entry>
  
</feed>
